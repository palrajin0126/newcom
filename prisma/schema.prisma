// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  name           String
  email          String           @unique
  password       String
  Cart           Cart[]
  CustomerOrder  CustomerOrder[]
}

model Cart {
  id             Int      @id @default(autoincrement())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  products       Json     @default("[]")
  totalCartValue Float
  isPaid         Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model CustomerOrder {
  id                  Int      @id @default(autoincrement())
  orderNumber         String   @db.VarChar(255)
  orderItems          Json
  orderTotal          Float
  customerName        String   @db.VarChar(255)
  email               String   @db.VarChar(255)
  mobile              String   @db.VarChar(255)
  apartment           String   @db.VarChar(255)
  block               String   @db.VarChar(255)
  locality            String   @db.VarChar(255)
  city                String   @db.VarChar(255)
  state               String   @db.VarChar(255)
  pincode             String   @db.VarChar(255)
  seller              String   @db.VarChar(255)
  quantity            Int
  merchantId          String   @db.VarChar(255)
  transactionId       String   @db.VarChar(255)
  providerId          String   @db.VarChar(255)
  responseCode        String   @db.VarChar(255)
  amount              Int      // Multiplied by 100
  providerReferenceId String   @db.VarChar(255)
  userId              String
  user                User     @relation(fields: [userId], references: [id])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Product {
  id                          String   @id @default(uuid())
  productName                 String
  price                       Float
  brand                       String
  seller                      String
  description                 String
  manufacturingDate           DateTime
  expiryDate                  DateTime
  listingDate                 DateTime
  discountedPrice             Float
  percentageOfDiscountOffered Float
  stock                       Int
  category                    String
  deliveryInfo                String
}

